&НаКлиенте
Процедура ЗаписатьВJSONПоследовательно(Команда)
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".json";
	Запись = Новый ЗаписьJSON;
	Запись.ОткрытьФайл(ИмяФайла,,,Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ДанныеРеализации = ПолучитьДанныеОРеализацияхЗаДатуЦеликом();
	Запись.ЗаписатьНачалоОбъекта();
	Для ТекущаяСтрока = 0 По ДанныеРеализации.Количество() - 1 Цикл
		Данные = СтрРазделить(ДанныеРеализации[ТекущаяСтрока], ";");
		Если ТекущаяСтрока = 0 Тогда
			ИмяСвойстваРеализация = "Реализация";
		Иначе
			ИмяСвойстваРеализация = "Реализация" + ТекущаяСтрока;
		КонецЕсли;
		Запись.ЗаписатьИмяСвойства("Реализация");
		Запись.ЗаписатьНачалоОбъекта();
		Запись.ЗаписатьИмяСвойства("Номер");
		Запись.ЗаписатьЗначение(Данные[4]);
		Запись.ЗаписатьИмяСвойства("Сотрудник");
		Запись.ЗаписатьЗначение(Данные[0]);
		Запись.ЗаписатьИмяСвойства("СуммаДокумента");
		Запись.ЗаписатьЗначение(Данные[1]);
		Запись.ЗаписатьИмяСвойства("ПризнакОплаты");
		Запись.ЗаписатьЗначение(Данные[2]);
		Запись.ЗаписатьИмяСвойства("Дата");
		Запись.ЗаписатьЗначение(Данные[3]);
		Запись.ЗаписатьКонецОбъекта();
	КонецЦикла;
	Запись.ЗаписатьКонецОбъекта(); 
	Запись.Закрыть();
	ОбщегоНазначенияКлиент.СообщитьПользователю("Выгрузка завершена!");
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзJSONПоследовательно(Команда)
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".json";
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл(ИмяФайла);
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.ИмяСвойства Тогда
			Текст = "Имя = " + Чтение.ТекущееЗначение;
		ИначеЕсли Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Булево
			ИЛИ Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Строка
			ИЛИ Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Число Тогда
			Текст = "Значение = " + Чтение.ТекущееЗначение;
		Иначе Текст = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(Текст) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
		КонецЕсли;
	КонецЦикла;
	Чтение.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВJSONЦеликом(Команда)
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".json";
	Запись = Новый ЗаписьJSON;
	Запись.ОткрытьФайл(ИмяФайла,,,Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ДанныеРеализаций = ПолучитьДанныеОРеализацияхЗаДатуКакСтруктура();
	ЗаписатьJSON(Запись, ДанныеРеализаций);
	Запись.Закрыть();
	ОбщегоНазначенияКлиент.СообщитьПользователю("Выгрузка завершена!");
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзJSONЦеликом(Команда)
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".json";
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл(ИмяФайла);
	ДанныеРеализаций = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	Для Каждого СтруктураРеализации Из ДанныеРеализаций Цикл
		Данные = СтруктураРеализации.Значение;
		ОбщегоНазначенияКлиент.СообщитьПользователю(Данные.Номер + " " + Данные.Сотрудник + " " + Данные.СуммаДокумента
		+ " " + Данные.ПризнакОплаты + " " + Данные.Дата);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСтрокуJSON(Команда)
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьЗначение(СтрокаJSON);
	СтрокаJSON = Запись.Закрыть()
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьСтрокуJSON(Команда)
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаJSON);
	Пока Чтение.Прочитать() Цикл
		Если Чтение.ТипТекущегоЗначения = ТипЗначенияJSON.Строка Тогда
			Текст = Чтение.ТекущееЗначение;
		Иначе Текст = "";
		КонецЕсли;
		Если ЗначениеЗаполнено(Текст) Тогда
			СтрокаJSON = Текст;
		КонецЕсли;
	КонецЦикла;
	Чтение.Закрыть();
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеОРеализацияхЗаДатуЦеликом()
	МассивДляВыгрузки = Новый Массив;       
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ДатаНачала", ДатаВыгрузки); 
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаВыгрузки));
	Запрос.Текст=
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
	|    РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|    РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
	|    РеализацияТоваровИУслуг.Дата КАК Дата,
	|    РеализацияТоваровИУслуг.Номер КАК Номер
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|    РеализацияТоваровИУслуг.Проведен
	|    И РеализацияТоваровИУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|    Дата";  	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Пока Выборка.Следующий() Цикл		
		МассивСтроки =  Новый Массив;
		МассивСтроки.Добавить(Выборка.СотрудникПредставление);
		МассивСтроки.Добавить(Выборка.СуммаДокумента);
		МассивСтроки.Добавить(Выборка.ПризнакОплаты);
		МассивСтроки.Добавить(Выборка.Дата);  
		МассивСтроки.Добавить(Выборка.Номер); 
		ДанныеСтроки = СтрСоединить(МассивСтроки, ";");       
		МассивДляВыгрузки.Добавить(ДанныеСтроки);
	КонецЦикла;   
	возврат МассивДляВыгрузки;
КонецФункции

&НаСервере
Функция ПолучитьДанныеОРеализацияхЗаДатуКакСтруктура()
	МассивДляВыгрузки = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаВыгрузки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаВыгрузки));
	Запрос.Текст=
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
	|    РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|    РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
	|    РеализацияТоваровИУслуг.Дата КАК Дата,
	|    РеализацияТоваровИУслуг.Номер КАК Номер
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|    РеализацияТоваровИУслуг.Проведен
	|    И РеализацияТоваровИУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|    Дата";
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущаяСтрока = 0;
	СтруктураВыгрузки = Новый Структура();
	Пока Выборка.Следующий() Цикл
		СтруктураРеализации = Новый Структура;
		СтруктураРеализации.Вставить("Номер", Выборка.Номер);
		СтруктураРеализации.Вставить("Сотрудник", Выборка.СотрудникПредставление);
		СтруктураРеализации.Вставить("СуммаДокумента", Выборка.СуммаДокумента);
		СтруктураРеализации.Вставить("ПризнакОплаты", Строка(Выборка.ПризнакОплаты));
		СтруктураРеализации.Вставить("Дата", Выборка.Дата);
		Если ТекущаяСтрока = 0 Тогда
			КлючСтруктурыВыгрузки = "Реализация";
		Иначе
			КлючСтруктурыВыгрузки = "Реализация" + ТекущаяСтрока;
		КонецЕсли;
		СтруктураВыгрузки.Вставить(КлючСтруктурыВыгрузки, СтруктураРеализации);
		ТекущаяСтрока = ТекущаяСтрока + 1;
	КонецЦикла;
	Возврат СтруктураВыгрузки;
КонецФункции

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыбратьКаталог("Выбор каталога для создания базы XML ", Новый ОписаниеОповещения("ПослеВыбораКаталогаДляВыгрузки", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталог(ЗаголовокДиалога, Оповещение)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = ЗаголовокДиалога;
	Диалог.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКаталогаДляВыгрузки(ВыбранныеФайлы, Параметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Каталог = ВыбранныеФайлы[0] + "/";
КонецПроцедуры