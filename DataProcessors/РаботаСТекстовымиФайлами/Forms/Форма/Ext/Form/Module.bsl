&НаКлиенте
Процедура ВыгрузитьДанныеПолностью(Команда)
	Если НЕ ЗначениеЗаполнено(ДатаВыгрузки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Укажите дату для выгрузки данных!", "ДатаВыгрузки");
		возврат;
	КонецЕсли;
	ВыполнитьЗаписьФайлаЦеликом();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДанныеПоследовательно(Команда)
	Если НЕ ЗначениеЗаполнено(ДатаВыгрузки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Укажите дату для выгрузки данных!", "ДатаВыгрузки");
	КонецЕсли;
	ВыполнитьПоследовательнуюЗапись();
КонецПроцедуры

&НаКлиенте
Процедура ПрочитьФайлПолностью(Команда)
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".txt";
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.НачатьЧтение(Новый ОписаниеОповещения("ПрочитьФайлПолностьюЗавершение", ЭтотОбъект, ТекстовыйДокумент), ИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлПоследовательно(Команда)
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".txt";
	Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
	ПрочитаннаяСтрока = "";
	Пока ПрочитаннаяСтрока <> Неопределено Цикл
		ПрочитаннаяСтрока = Текст.ПрочитатьСтроку();
		ПрочитанныйМассив = СтрРазделить(ПрочитаннаяСтрока, ";");
		Для Каждого Строка Из ПрочитанныйМассив Цикл
			Если НЕ ПустаяСтрока(Строка) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Строка);
			КонецЕсли;
		КонецЦикла
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПрочитьФайлПолностьюЗавершение(ТекстовыйДокумент) Экспорт
	Для ТекущаяСтрока = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		ПрочитаннаяСтрока = ТекстовыйДокумент.ПолучитьСтроку(ТекущаяСтрока);
		ПрочитанныйМассив = СтрРазделить(ПрочитаннаяСтрока, ";");
		Для Каждого Строка Из ПрочитанныйМассив Цикл
			Если НЕ ПустаяСтрока(Строка) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(Строка);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаписьФайлаЦеликом()
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".txt";
	ТекстовыйДокумент= Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТипФайла(КодировкаТекста.UTF8);
	МассивДляВыгрузки = ПолучитьДанныеОРеализацияхЗаДатуЦеликом();
	ТекстДляВыгрузки = СтрСоединить(МассивДляВыгрузки, Символы.ПС);
	ТекстовыйДокумент.УстановитьТекст(ТекстДляВыгрузки);
	ТекстовыйДокумент.НачатьЗапись(, ИмяФайла);
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеОРеализацияхЗаДатуЦеликом()
	МассивДляВыгрузки = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаВыгрузки);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаВыгрузки));
	Запрос.Текст=
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
	|    РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|    РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
	|    РеализацияТоваровИУслуг.Дата КАК Дата
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|    РеализацияТоваровИУслуг.Проведен
	|    И РеализацияТоваровИУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|    Дата";	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Пока Выборка.Следующий() Цикл
		МассивСтроки =  Новый Массив;
		МассивСтроки.Добавить(Выборка.СотрудникПредставление);
		МассивСтроки.Добавить(Выборка.СуммаДокумента);
		МассивСтроки.Добавить(Выборка.ПризнакОплаты);
		МассивСтроки.Добавить(Выборка.Дата);
		ДанныеСтроки = СтрСоединить(МассивСтроки, ";");
		МассивДляВыгрузки.Добавить(ДанныеСтроки);
	КонецЦикла;
	возврат МассивДляВыгрузки;
КонецФункции

&НаКлиенте
Процедура ВыполнитьПоследовательнуюЗапись()
	ИмяФайла = Каталог + Формат(ДатаВыгрузки, "ДФ=dd.MM.yy") + ".txt";
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8);
	ОтправленныйКурсор = ДатаВыгрузки -1;
	ПолученныйКурсор = Неопределено;
	Пока Истина Цикл
		МассивДляВыгрузки = Новый Массив;
		ПолученныйКурсор =  ПолучитьСледующуюЧастьДанных(МассивДляВыгрузки, ДатаВыгрузки, ПорцияВыгрузки, ОтправленныйКурсор); //3
		Если ОтправленныйКурсор = ПолученныйКурсор Тогда
			прервать;
		Иначе
			ОтправленныйКурсор = ПолученныйКурсор;
		КонецЕсли;
		Для Каждого СтрокаВыгрузка Из МассивДляВыгрузки Цикл 
			ЗаписьТекста.ЗаписатьСтроку(СтрокаВыгрузка); 
		КонецЦикла;
	КонецЦикла;
	ЗаписьТекста.Закрыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСледующуюЧастьДанных(МассивДляВыгрузки, ДатаВыгрузки, ПорцияВыгрузки,  ЗНАЧ ОтправленныйКурсор)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", ОтправленныйКурсор);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаВыгрузки));
	ТекстЗапроса=
	"ВЫБРАТЬ ПЕРВЫЕ &ПорцияВыгрузки
	|	РеализацияТоваровИУслуг.Сотрудник.Представление КАК СотрудникПредставление,
	|	РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровИУслуг.ПризнакОплаты КАК ПризнакОплаты,
	|	РеализацияТоваровИУслуг.Дата КАК Дата
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.Проведен
	|	И РеализацияТоваровИУслуг.Дата > &ДатаНачала
	|	И РеализацияТоваровИУслуг.Дата < &ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";    
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПорцияВыгрузки", ПорцияВыгрузки);   
	Запрос.Текст = ТекстЗапроса;        
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСтроки =  Новый Массив;
		МассивСтроки.Добавить(Выборка.СотрудникПредставление);
		МассивСтроки.Добавить(Выборка.СуммаДокумента);
		МассивСтроки.Добавить(Выборка.ПризнакОплаты);
		МассивСтроки.Добавить(Выборка.Дата);
		ДанныеСтроки = СтрСоединить(МассивСтроки, ";");
		МассивДляВыгрузки.Добавить(ДанныеСтроки);
		ОтправленныйКурсор = Выборка.Дата;
	КонецЦикла;	
	возврат ОтправленныйКурсор;	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаВыгрузки = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталог(ЗаголовокДиалога, Оповещение)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = ЗаголовокДиалога;
	Диалог.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыбратьКаталог("Выбор каталога для выгрузки", Новый ОписаниеОповещения("ПослеВыбораКаталогаДляВыгрузки", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКаталогаДляВыгрузки(ВыбранныеФайлы, Параметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Каталог = ВыбранныеФайлы[0] + "/";
КонецПроцедуры
